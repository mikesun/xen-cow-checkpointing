Index: ioemu/vl.c
===================================================================
--- ioemu.orig/vl.c	2007-05-03 19:01:57.000000000 +0100
+++ ioemu/vl.c	2007-05-03 19:02:49.000000000 +0100
@@ -176,6 +176,7 @@
 int autostart = 1;
 
 char domain_name[1024] = { 'H','V', 'M', 'X', 'E', 'N', '-'};
+extern int domid;
 
 /***********************************************************/
 /* x86 ISA bus support */
@@ -6130,6 +6131,7 @@
            "-s              wait gdb connection to port %d\n"
            "-p port         change gdb connection port\n"
            "-l item1,...    output log to %s (use -d ? for a list of log items)\n"
+           "-d domain       domain that we're serving\n"
            "-domain-name    domain name that we're serving\n"
            "-hdachs c,h,s[,t]  force hard disk 0 physical geometry and the optional BIOS\n"
            "                translation (t=none or lba) (usually qemu can guess them)\n"
@@ -6239,6 +6241,8 @@
     QEMU_OPTION_daemonize,
     QEMU_OPTION_option_rom,
     QEMU_OPTION_semihosting
+    ,
+    QEMU_OPTION_d,
 };
 
 typedef struct QEMUOption {
@@ -6328,6 +6332,8 @@
 #if defined(TARGET_ARM)
     { "semihosting", 0, QEMU_OPTION_semihosting },
 #endif
+    
+    { "d", HAS_ARG, QEMU_OPTION_d },
     { NULL },
 };
 
@@ -7010,6 +7016,10 @@
             case QEMU_OPTION_domainname:
                 strncat(domain_name, optarg, sizeof(domain_name) - 20);
                 break;
+            case QEMU_OPTION_d:
+                domid = atoi(optarg);
+                fprintf(logfile, "domid: %d\n", domid);
+                break;
             }
         }
     }
