Index: ioemu/hw/pc.c
===================================================================
--- ioemu.orig/hw/pc.c	2007-05-03 19:09:34.000000000 +0100
+++ ioemu/hw/pc.c	2007-05-03 19:11:08.000000000 +0100
@@ -446,6 +446,8 @@
     nb_ne2k++;
 }
 
+#define NOBIOS 1
+
 /* PC hardware initialisation */
 static void pc_init1(uint64_t ram_size, int vga_ram_size, int boot_device,
                      DisplayState *ds, const char **fd_filename, int snapshot,
@@ -453,10 +455,15 @@
                      const char *initrd_filename,
                      int pci_enabled)
 {
+#ifndef NOBIOS
     char buf[1024];
-    int ret, linux_boot, initrd_size, i;
+    int ret, initrd_size;
+#endif /* !NOBIOS */
+    int linux_boot, i;
+#ifndef NOBIOS
     unsigned long bios_offset, vga_bios_offset, option_rom_offset;
     int bios_size, isa_bios_size;
+#endif /* !NOBIOS */
     PCIBus *pci_bus;
     int piix3_devfn = -1;
     CPUState *env;
@@ -489,6 +496,7 @@
     cpu_register_physical_memory(0, ram_size, 0);
 #endif
 
+#ifndef NOBIOS
     /* BIOS load */
     bios_offset = ram_size + vga_ram_size;
     vga_bios_offset = bios_offset + 256 * 1024;
@@ -514,6 +522,7 @@
         snprintf(buf, sizeof(buf), "%s/%s", bios_dir, VGABIOS_FILENAME);
     }
     ret = load_image(buf, phys_ram_base + vga_bios_offset);
+#endif /* !NOBIOS */
     
     /* setup basic memory access */
 #ifndef CONFIG_DM		/* HVM domain owns memory */
@@ -521,6 +530,7 @@
                                  vga_bios_offset | IO_MEM_ROM);
 #endif
 
+#ifndef NOBIOS
     /* map the last 128KB of the BIOS in ISA space */
     isa_bios_size = bios_size;
     if (isa_bios_size > (128 * 1024))
@@ -550,6 +560,7 @@
     /* map all the bios at the top of memory */
     cpu_register_physical_memory((uint32_t)(-bios_size), 
                                  bios_size, bios_offset | IO_MEM_ROM);
+#endif
     
     bochs_bios_init();
 
